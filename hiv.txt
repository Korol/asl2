Добавление новой вкладки в Настройках (через webpack и bundle.js):
1. Создаём нужный компонент в react/components/settings по примерам, которые уже есть и работают.
2. Добавляем новую вкладку с компонентом в react/components/settings/SettingPage.jsx
3. Прописываем нужные функции (actions) в react/actions/setting-action.js
4. Прописываем роуты для этих actions в src/application/config/routes.php
5. Создаём необходимые контроллеры/методы, методы в моделях.
6. Прописываем нужные константы в react/actions/action-types.js
7. Прописываем действия по нужным константам в редьюсере react/reducers/config-reducer.js
8. Долбаемся с ошибками пол-дня, пока всё настроим/отладим.
9. PROFIT!!!
-------------

Формирование нового bundle.js:
В консоли: webpack

Редактирование CSS:
1. Редактируем стили в /src/public/css/assol.css
2. В консоли запускаем: $(npm bin)/gulp css  (!!! именно с $ в начале команды !!!)
3. Получаем новый скомпилированный файл стилей /src/public/build/assol.min.css
4. PROFIT!!!
-------------

Статусы ssd:
0 - default
1 – в очереди
2 - на утверждение
3 - подтверждено

--------------

Sticky table:
1. для <div>, в который завернута таблица – добавить классы: sticky-table sticky-headers sticky-ltr-cells
2. закрепляем шапку таблицы: в <thead> –> <tr> прописываем класс sticky-row.
3. закрепляем первую колонку: в <thead> –> <tr> -> <th> прописываем класс sticky-cell.
4. для каждой строки: в первом столбце прописываем в <tbody> -> <td> класс sticky-cell.

--------------

Sortable table:
0. для таблицы указываем  class="tablesorter"!
1. если таблица формируется при помощи js - то код вызова сортировки нужно прописывать в конец функции, которая заполняет таблицу данными
2. если таблица формируется при помощи php - то код вызова сортировки нужно прописывать после формирования таблицы
3. код вызова сортировки:
$("#ReportIndividualDaily_data").tablesorter({
    selectorHeaders: 'thead th.sortable' // <-- здесь указываем класс, который определяет те столбцы, по которым будет работать сортировка
});

--------------

Открыть всю базу Клиентов для Сотрудника (редактирование вкладки Фото-Видео)

if(($this->isDirector || $this->isSecretary) && ()){
    // показываем кнопку «Открыть базу Клиентов»
    // пишем для неё обработчик клика через $.post на контроллер Employee_Site_Clients/openbase
    // в openbase проверяем, что это Сотрудник
}

Жмём кнопку «Открыть базу Клиентов»:
1. Выбрать все ID связей EmploeeID - SiteID из таблицы assol_employee_site.
2. Если такие связи есть – удалить их, а также удалить все записи из таблицы assol_employee_site_customer,
    в которых в поле EmployeeSiteID указаны полученные из таблицы assol_employee_site ID связей из п.1.
3. Получить ID активных сайтов в системе (assol_sites).
4. Создать в assol_employee_site новые связи EmployeeID - Site ID для ID Сотрудника и всех активных сайтов.
5. Получить ID этих новых связей.
6. Выполнить действия, аналогичные controllers/Employee_Site_Clients/save.
7. Перезагрузить страницу с использованием #Work:
    в js/src/assol.employee.card.js добавить работу с hash в URL:
    if(window.location.hash) {
        var mhash = window.location.hash;
        $('a[href="'+mhash+'"]').tab('show');
    }
    скомпилировать новый js/assol.employee.card.js.

8. Если в дальнейшем потребуются какие-то отчеты для Сотрудников по Клиентам –
    то нужно будет исключить удаление старых связей, т.к. это поломает отчеты.
    Нужно будет добавлять новых Клиентов и новые сайты, избегая дублирования.

============
Добавление нового пункта в разделе Отчеты для Директора:
1. /Users/korol/Sites/asl2.loc/src/public/js/src/assol.report.list.director.js
добавляем константу в нужный level (копипастим предыдущую константу и её настройки, адаптируем)
копипастим в этом файле все вхождения предыдущей константы, адаптируем под новую константу
2. в терминале выполняем сжатие отредактированного в п.1 файла (описано в edited_by_task.txt)
3. /Users/korol/Sites/asl2.loc/src/application/views/form/reports.php
добавляем блок с указанным ранее id и в него подключаем загрузку нужного нам контента

Для Секретаря:
1. /Users/korol/Sites/asl2.loc/src/public/js/rsrc/eport.list.secretary.js
всё аналогично п.1 выше
2. в терминале выполняем сжатие отредактированного в п.1 файла (описано в edited_by_task.txt)
3. /Users/korol/Sites/asl2.loc/src/application/views/form/reports/calls.php
выводим инфу и разрешение согласно доступам

Для Переводчика:
1. /Users/korol/Sites/asl2.loc/src/public/js/src/assol.report.list.translate.js
аналогично
2. в терминале выполняем сжатие отредактированного в п.1 файла (описано в edited_by_task.txt)
3. /Users/korol/Sites/asl2.loc/src/application/views/form/reports/calls.php
выводим инфу и разрешение согласно доступам